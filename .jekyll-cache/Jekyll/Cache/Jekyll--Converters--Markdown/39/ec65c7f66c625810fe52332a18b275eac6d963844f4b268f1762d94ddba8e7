I":<h3 id="进制的转换">进制的转换</h3>

<ul>
  <li>R进制转换十进制</li>
</ul>

<p>例如：有6进制数5043，那么转换成十进制 = 3<em>6^0+4</em>6^1+0<em>6^2+5</em>6^3=1107;</p>

<ul>
  <li>十进制转R进制</li>
</ul>

<p>当十进制是整数时
例如：有十进制数100，转换成16进制，用100除以R，记录每次的余数，若商不为0，则继续除以R，直至商为0，最后结果 64</p>

<p>当十进制是小数时
例如：有十进制数2.25，转换成2进制，用R乘以十进制小数的每一位，记录每次所得整数，若结果小数部分不为0，则继续乘，直至没有小数，结果为10.01</p>

<ul>
  <li>m进制转n进制</li>
</ul>

<p>方法：先将m进制转换成十进制，再将十进制转换成n进制</p>

<ul>
  <li>二进制转八进制</li>
</ul>

<p>方法：每三位二进制数转为一位8进制数，二进制数位个数不是三的倍数，则在前面补0，例如：二进制01101有五位，则在前面补0，变成001 101，每三位转为一位八进制数，001=1,101=1+4=5，也即01101=15；</p>

<ul>
  <li>二进制转十六进制</li>
</ul>

<p>方法：每四位二进制转为一位十六进制，方法跟上面差不多，例如：101101，先补0，变成0010 1101.每四位转为一位十六进制，0010=2 1101=D，也即101101=2D。</p>

<h3 id="数的表示">数的表示</h3>

<p>各种数值在计算机中表示的形式称为机器数。其特定就是使用二进制计数制，符号用0和1表示，小数点则隐含，不占位置。</p>

<p>机器数有无符号数和带符号数之分。无符号数表示正数，没符号位。带符号数最高位为符号位，正数符号位为0，负数符号位为1。定点表示法分 纯小数和纯整数两种，其中小数点不占存储位，而是按照以下约定：</p>

<p>纯小数:约定小数点的位置在机器数的最高数值位之前。
纯整数：约定小数点的位置在机器数的最低数值位之后。
真值：机器数对应的实际数值。
带符号数有下列编码方式：</p>

<p>原码：一个数的正常二进制表示，最高位表示符号，其中数值0的源码有两种形式，例如：+0（0 0000000）和-0（1 0000000）。</p>

<p>反码：正数的反码即原码；负数的反码是在原码的基础上，除符号位外，其他各位按位取反。数值0的反码也有两种形式：+0（0 0000000）和-0（1 1111111）。</p>

<p>补码：正数的补码即原码；负数的补码是在原码的基础上，除符号位外，其他各位按位取反，而后末位+1，，<font size="3" color="#8B0000">若有进制为则产生进位</font>。因此数值0 的补码只有一种形式+0 = -0 =0 0000000.</p>

<p>移码：用作浮点运算的阶码，<font size="3" color="#8B0000">无论正数负数</font>，都是将该原码的<font size="3" color="#8B0000">补码的首位（符号位）取反</font>得到移码。</p>

<p>符号表示：注意-&gt;原码最高位是代表正负号，且不参与计数；而其他编码最高位虽然也是代表正负号，但参与计数。</p>

:ET