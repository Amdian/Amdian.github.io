I"D<ul id="markdown-toc">
  <li><a href="#进程和线程的概念" id="markdown-toc-进程和线程的概念">进程和线程的概念</a></li>
  <li><a href="#生命周期" id="markdown-toc-生命周期">生命周期</a></li>
  <li><a href="#创建线程的多种方式" id="markdown-toc-创建线程的多种方式">创建线程的多种方式</a></li>
</ul>

<h3 id="进程和线程的概念">进程和线程的概念</h3>
<ul>
  <li>进程（Process）可以定义为“并发执行的程序在一个数据集合上的执行过程”。
    <ul>
      <li>进程是一个可以拥有资源的独立单位</li>
      <li>进程是一个可以独立调度和分配的基本单位。</li>
    </ul>
  </li>
  <li>线程是进程的一个实体，是被独立调度和分派的基本单位，表示进程中的一个控制点，执行一系列指令。</li>
</ul>

<p><font size="3" color="#8B0000">通俗点讲，就好像一个班级，班级是一个进程，那么这个班级里的学生就是线程了。假设班级有500元，这个班级的学生可以是可以用这个500元的了，具体怎么使用就看班级如何分配。</font></p>

<h3 id="生命周期">生命周期</h3>
<blockquote>
  <p>每个Java程序都有一个隐含的主线程，即main()方法。要实现多线程，必须在主线程中创建新的线程。Java语言使用Thread类及子类对象来表示线程，在它的生命周期中，线程会处于4种不同的状态。
    * (1) New  (新)。
    (2) Runnable (可运行)。
    (3) Blocked (被阻塞)。
    (4) Dead（死亡）</p>
</blockquote>

<h3 id="创建线程的多种方式">创建线程的多种方式</h3>
<ul>
  <li>继承Thread类</li>
  <li>实现Runnable接口创建线程</li>
  <li>通过Callable和FutureTask创建线程</li>
  <li>通过线程池创建线程</li>
</ul>

<p>…..正在码字</p>
:ET